package com.automationPractice.TestCases;

import java.util.List;

import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.automationPractice.BaseTest.TestBase;
import com.automationPractice.Pages.SearchResultPage;

public class SearchPageTest extends TestBase {

	SearchResultPage searhResultPage;

	@BeforeMethod
	public void setup() {

		initialization();
		searhResultPage = new SearchResultPage();
	}

	@Test
	public void verifySortByOptions() {
		searhResultPage.enterSearchText();
		List<WebElement> sortOptions=searhResultPage.check_sorting_criterion();
		System.out.println(sortOptions.toString());
		String [] expectedSortValues= {"--","Price: Lowest first","Price: Highest first","Product Name: A to Z","Product Name: Z to A","In stock","Reference: Lowest first","Reference: Highest first"};
		
		for(WebElement we:sortOptions) {
			
			boolean match = false;
			
			for(int i=0; i<expectedSortValues.length; i++) {
				
				if(we.getText().equals(expectedSortValues[i])) {
					match=true;
				}
			}Assert.assertTrue(match, "DropDown Value is not matching");
		}
		
	}
	@AfterMethod
	public void teardown() {

		quitBrowser();
	}

}
